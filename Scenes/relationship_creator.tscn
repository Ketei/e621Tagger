[gd_scene load_steps=2 format=3 uid="uid://dd7cel2c8ljss"]

[sub_resource type="GDScript" id="GDScript_0x81g"]
resource_name = "AutoBuild"
script/source = "extends Control


@export var override_char: String = \"\"
@export var override_file: String = \"\"


#func _ready() -> void:
#	var _indexes: Dictionary = {}
#
#	for file in DirAccess.get_files_at(\"res://Database/tags/\"):
#		var _tag_load: Tag = ResourceLoader.load(\"res://Database/tags/\" + file)
#
#		if not _indexes.has(file.left(1)):
#			_indexes[file.left(1)] = {}
#
#		_indexes[file.left(1)][_tag_load.tag] = \"res://Database/tags/\" + file
#
#	if override_char == \"\":
#		print(\"building all\")
#		build_all_implications(_indexes)
#	else:
#		print(\"building single\")
#		build_specific_implications(_indexes, override_char, override_file)
	
	
static func make_tag(tag_name: String, tag_parents: Array[String], tag_category: Tagger.Categories) -> void:
	var _tag_dict: Dictionary = {}
	
	var _tag := Tag.new()
	_tag.tag = tag_name
	_tag.category = tag_category
	_tag.parents = tag_parents
	var tag_path: String = _tag.save()
	
	var _implication : ImplicationDictionary
	
	if ResourceLoader.exists(\"user://database/implication/\" + tag_path.left(1) + \".tres\", \"ImplicationDictionary\"):
		_implication = ResourceLoader.load(\"user://database/implication/\" + tag_path.left(1) + \".tres\")
	else:
		_implication = ImplicationDictionary.create_implication(tag_name.left(1), tag_name.left(1))
	
	_implication.tag_implications[tag_name] = tag_path
	_implication.save()


static func build_all_implications(index_dict: Dictionary) -> void:
	var _filename: String = \"\"
	
	for character in index_dict.keys():
		_filename = character + \".tres\"
		
		if not _filename.is_valid_filename():
			_filename = _filename.validate_filename()
		
		var _new_implication = ImplicationDictionary.new()
		_new_implication.file_name = _filename
		_new_implication.implication_index = character
		_new_implication.tag_implications = index_dict[character]
		_new_implication.save(true)
	

static func build_specific_implications(index_dict: Dictionary, override_string: String, override_filename: String) -> void:
	if not index_dict.has(override_string):
		return
		
	if not override_filename.ends_with(\".tres\"):
		override_filename += \".tres\"
	
	var _new_implication := ImplicationDictionary.new()
	_new_implication.file_name = override_filename
	_new_implication.implication_index = override_string
	_new_implication.tag_implications = index_dict[override_string]
	_new_implication.save(true)

"

[node name="RelationshipCreator" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_0x81g")
