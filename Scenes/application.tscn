[gd_scene load_steps=23 format=3 uid="uid://baevxmkhc4c00"]

[ext_resource type="Script" path="res://Globals/app_script.gd" id="1_3k5pd"]
[ext_resource type="PackedScene" uid="uid://b6wj2l5tgewim" path="res://Scenes/e621_requester.tscn" id="2_4gepn"]
[ext_resource type="Script" path="res://Scenes/tagger_controls.gd" id="2_o722f"]
[ext_resource type="Script" path="res://Classes/list_loader.gd" id="3_nde26"]
[ext_resource type="Texture2D" uid="uid://dsgcifoux12h5" path="res://Textures/SearchIcon.svg" id="4_83kdk"]
[ext_resource type="Script" path="res://Classes/taglist_generator.gd" id="5_3orkp"]
[ext_resource type="Script" path="res://Scenes/platform_option_button.gd" id="5_03qrr"]
[ext_resource type="PackedScene" uid="uid://dq3egjcbm6oqd" path="res://Scenes/full_screen_display.tscn" id="7_bjv2t"]

[sub_resource type="GDScript" id="GDScript_6n0ht"]
script/source = "extends Control

signal add_tag_signal(tag_string)


@export var tags_to_add: int = 10

@onready var e6_requester_quick_search: e621Requester = $e621RequesterQuickSearch
@onready var auto_com_line_edit: LineEdit = $AutoComLineEdit
@onready var auto_complete_item_list: ItemList = $AutoCompleteItemList
@onready var cancel_auto_button = $CancelAutoButton

@onready var add_auto_complete_node = $\"..\"
@onready var add_selected_button = $AddSelectedButton
@onready var some_fix_option: OptionButton = $SomeFixOption
@onready var request_cooldown_timer = $\"../RequestCooldownTimer\"

var tag_search_array: Array[String] = []
var is_tagger_requesting: float = false


func _ready():
	some_fix_option.item_selected.connect(save_search_select)
	some_fix_option.select(some_fix_option.get_item_index(Tagger.settings.tag_search_setting))
	request_cooldown_timer.timeout.connect(timer_timeout)
	e6_requester_quick_search.get_finished.connect(add_online_to_list)
	auto_com_line_edit.text_submitted.connect(search_for_tag)
	cancel_auto_button.pressed.connect(close_add)
	add_selected_button.pressed.connect(add_selected_to_list)


func save_search_select(item_index: int) -> void:
	Tagger.settings.tag_search_setting = some_fix_option.get_item_id(item_index)


func add_selected_to_list() -> void:
	if not auto_complete_item_list.is_anything_selected():
		return
	
	var selected_item_list: Array = auto_complete_item_list.get_selected_items()


	for index_select in selected_item_list:
		var tag_text: String = auto_complete_item_list.get_item_text(index_select)
		add_tag_signal.emit(tag_text)
	
	selected_item_list.reverse()
	
	for index_remove in selected_item_list:
		tag_search_array.remove_at(index_remove)
		auto_complete_item_list.remove_item(index_remove)
	
	auto_complete_item_list.deselect_all()


func search_for_tag(tag_to_search: String) -> void:
	auto_com_line_edit.editable = false
	tag_to_search = tag_to_search.strip_edges().to_lower()
	
	if is_tagger_requesting:
		e6_requester_quick_search.cancel_main_request()
	
	tag_search_array.clear()
	auto_complete_item_list.clear()
	
	var tag_for_url: String = \"\"

	if some_fix_option.selected == 0:
		tag_for_url = tag_to_search + \"*\"
	elif some_fix_option.selected == 1:
		tag_for_url = \"*\" + tag_to_search 
	elif some_fix_option.selected == 2:
		tag_for_url = \"*\" + tag_to_search + \"*\"
	
	if some_fix_option.selected == 0:
		for tag in Tagger.tag_manager.search_with_prefix(tag_to_search):
			if tag_search_array.has(tag):
				continue
			auto_complete_item_list.add_item(tag, load(\"res://Textures/valid_tag.png\"))
			tag_search_array.append(tag)
	elif some_fix_option.selected == 1:
		for tag in Tagger.tag_manager.search_with_suffix(tag_to_search):
			if tag_search_array.has(tag):
				continue
			auto_complete_item_list.add_item(tag, load(\"res://Textures/valid_tag.png\"))
			tag_search_array.append(tag)
	elif some_fix_option.selected == 2:
		for tag in Tagger.tag_manager.search_for_content(tag_to_search):
			if tag_search_array.has(tag):
				continue
			auto_complete_item_list.add_item(tag, load(\"res://Textures/valid_tag.png\"))
			tag_search_array.append(tag)

	auto_com_line_edit.clear()
	
	e6_requester_quick_search.match_name = [tag_for_url]
	e6_requester_quick_search.get_tags()
	is_tagger_requesting = true
	request_cooldown_timer.start()
	

func add_online_to_list() -> void:
	is_tagger_requesting = false
	
	var item_list: Array[String] = []
	
	for e621_tag in e6_requester_quick_search.response_array_unflipped:
		var temp_format: e621Tag = e621_tag
		var tag_name: String = temp_format.tag_name
		
		if tag_search_array.has(tag_name) or temp_format.category == e621Tag.Category.ARTIST or temp_format.category == e621Tag.Category.INVALID:
			continue

		item_list.append(tag_name)
		
		if item_list.size() == tags_to_add:
			break
	
	for item in item_list:
		tag_search_array.append(item)
		auto_complete_item_list.add_item(item, load(\"res://Textures/generic_tag.png\"))


func clear_all_items() -> void:
	auto_com_line_edit.clear()
	auto_complete_item_list.clear()
	tag_search_array.clear()
	if is_tagger_requesting:
		e6_requester_quick_search.cancel_main_request()
		is_tagger_requesting = false


func close_add() -> void:
	add_auto_complete_node.visible = false
	clear_all_items()


func timer_timeout() -> void:
	auto_com_line_edit.editable = true
"

[sub_resource type="GDScript" id="GDScript_w31il"]
script/source = "extends Control

@onready var tag_to_add_line_edit = $TagToAddLineEdit
@onready var categories_menu = $CategoriesMenu
@onready var create_tags_button = $CreateTagsButton
@onready var wiki_info = $WikiInfo
@onready var add_parent_line_edit = $AddParentLineEdit
@onready var parent_item_list = $ParentItemList
@onready var tag_prio_box: SpinBox = $TagPrioBox
@onready var suggestion_item_list: ItemList = $SuggestionItemList
@onready var suggestion_line_edit: LineEdit = $SugestionLineEdit
@onready var has_images_check_box: CheckBox = $HasImagesCheckBox


var parent_tags: Array = []

var text_timer: Timer


var tag_suggestion_array: Array[String] = []


func _ready():
	suggestion_line_edit.text_submitted.connect(add_suggestion)
	suggestion_item_list.item_activated.connect(remove_suggestion)

	create_tags_button.pressed.connect(create_tag)
	tag_to_add_line_edit.text_changed.connect(check_if_can_add_tag)
	add_parent_line_edit.text_submitted.connect(add_parent)
	parent_item_list.item_activated.connect(remove_parent)
	
	text_timer = Timer.new()
	text_timer.wait_time = 2.0
	text_timer.autostart = false
	text_timer.one_shot = true
	text_timer.timeout.connect(on_timer_timeout)
	add_child(text_timer)


func add_suggestion(new_suggestion: String) -> void:
	if not tag_suggestion_array.has(new_suggestion):
		tag_suggestion_array.append(new_suggestion)
		suggestion_item_list.add_item(new_suggestion)
		suggestion_line_edit.clear()


func remove_suggestion(item_id: int) -> void:
	tag_suggestion_array.remove_at(item_id)
	suggestion_item_list.remove_item(item_id)


func check_if_can_add_tag(new_text: String) -> void:
	if new_text == \"\" and not create_tags_button.disabled:
		create_tags_button.disabled = true
	elif new_text != \"\" and create_tags_button.disabled:
		create_tags_button.disabled = false


func add_parent(new_parent:String) -> void:
	new_parent = new_parent.to_lower().strip_edges()
	
	if new_parent.is_empty() or parent_tags.has(new_parent):
		add_parent_line_edit.clear()
		return
	
	parent_tags.append(new_parent)
	parent_item_list.add_item(new_parent)
	add_parent_line_edit.clear()


func remove_parent(parent_index: int) -> void:
	parent_tags.remove_at(parent_index)
	parent_item_list.remove_item(parent_index)


func create_tag() -> void:
	var target_tag: String = tag_to_add_line_edit.text
	target_tag = target_tag.strip_edges().to_lower()
	if Tagger.tag_manager.has_tag(target_tag):
		clear_menu_items(\"Tag already exists!!!\")
		return

	var _tag_path: String = TagMaker.make_tag(target_tag, parent_tags, categories_menu.selected, wiki_info.text, int(tag_prio_box.value), tag_suggestion_array, has_images_check_box.button_pressed)
	
	if not Tagger.tag_manager.relation_database.has(target_tag.left(1)):
		Tagger.tag_manager.relation_database[target_tag.left(1)] = {}
	
	Tagger.tag_manager.relation_database[target_tag.left(1)][target_tag] = _tag_path

	clear_menu_items(\"Done!\")


func clear_menu_items(btn_message: String) -> void:
	create_tags_button.text = btn_message
	tag_suggestion_array.clear()
	suggestion_item_list.clear()
	suggestion_line_edit.clear()
	tag_prio_box.set_value_no_signal(0)
	categories_menu.select(0)
	tag_to_add_line_edit.clear()
	add_parent_line_edit.clear()
	parent_tags.clear()
	parent_item_list.clear()
	wiki_info.clear()
	text_timer.start()


func on_timer_timeout() -> void:
	create_tags_button.text = \"Create Tag\"

"

[sub_resource type="GDScript" id="GDScript_lfssu"]
resource_name = "tag_reviewer_script"
script/source = "extends Control


@onready var tag_searcher = $TagSearcher
@onready var tag_search_button = $TagSearcher/TagSearchButton
@onready var name_line = $NameLine
@onready var categories_menu: OptionButton = $CategoriesMenu
@onready var wiki_edit = $WikiEdit
@onready var tag_update_button = $TagUpdate

@onready var parents_item_list: ItemList = $ParentsItemList
@onready var add_parent_line_edit: LineEdit = $AddParentLineEdit

@onready var tag_prio_box: SpinBox = $TagPrioBox

@onready var tag_suggestion_list: ItemList = $TagSuggestionList
@onready var tag_suggestion_line_edit: LineEdit = $TagSuggestionLineEdit

@onready var lewd_pic_container = $Imeges/ScrollContainer/LewdPicsContainer
@onready var preview_progress_load = $Imeges/PreviewProgressLoad

@onready var tag_reviewer_requester = $TagReviewerRequester

@onready var review_menu: PopupMenu = $ReviewerMenuBar/Review
@onready var has_images_check_box = $HasImagesCheckBox

@onready var full_screen_display = $FullScreenDisplay
@onready var open_pic_folder_button: Button = $OpenPicFolder


var lewd_display = preload(\"res://Scenes/lewd_pic_display.tscn\")

var parents: Array = []
var suggestions_array: Array[String] = []
var text_change_timer: Timer

var images_to_display: Array[ImageTexture] = []


func _ready():
	open_pic_folder_button.pressed.connect(open_pics_folder)
	tag_reviewer_requester.downloads_finished.connect(create_download_textures)
	tag_reviewer_requester.post_limit = Tagger.settings.e621_review_amount
	has_images_check_box.toggled.connect(image_checkbox_toggle)

	tag_suggestion_line_edit.text_submitted.connect(add_suggested)
	tag_suggestion_list.item_activated.connect(remove_suggested)
	text_change_timer = Timer.new()
	text_change_timer.wait_time = 1.0
	text_change_timer.autostart = false
	text_change_timer.one_shot = true
	text_change_timer.timeout.connect(_on_timer_timeout)
	add_child(text_change_timer)
	
	tag_searcher.text_submitted.connect(search_for_tag)
	tag_search_button.pressed.connect(button_search_pressed)
	tag_update_button.pressed.connect(update_tag)
	
	review_menu.id_pressed.connect(delete_tag)
	
	parents_item_list.item_activated.connect(remove_parent)
	add_parent_line_edit.text_submitted.connect(add_parent)
	

func update_tag() -> void:
	var _tag: Tag = Tagger.tag_manager.get_tag(name_line.text.to_lower())
	
	_tag.category = categories_menu.selected as Tagger.Categories
	_tag.parents = parents.duplicate()
	_tag.wiki_entry = wiki_edit.text
	_tag.tag_priority = int(tag_prio_box.value)
	_tag.suggestions = suggestions_array.duplicate()
	_tag.has_pictures = has_images_check_box.button_pressed
	_tag.save()
	
	tag_update_button.text = \"Updated!\"
	text_change_timer.start()


func open_pics_folder() -> void:
	var current_tag_filename: Tag = Tagger.tag_manager.get_tag(name_line.text)
	if not DirAccess.dir_exists_absolute(Tagger.tag_images_path + current_tag_filename.file_name.get_basename()):
		DirAccess.make_dir_absolute(Tagger.tag_images_path + current_tag_filename.file_name.get_basename())
	
	OS.shell_open(ProjectSettings.globalize_path(Tagger.tag_images_path + current_tag_filename.file_name.get_basename()))


func image_checkbox_toggle(new_toggle: bool) -> void:
	
	if new_toggle:
		open_pic_folder_button.disabled = false
	else:
		open_pic_folder_button.disabled = true


func delete_tag(id_button: int) -> void:
	if id_button != 1:
		return
	
	var _tag: Tag = Tagger.tag_manager.get_tag(name_line.text.to_lower())
	var _tag_path = Tagger.tags_path + _tag.file_name
	
	if ResourceLoader.exists(_tag_path):
		OS.move_to_trash(ProjectSettings.globalize_path(_tag_path))
	
	var _implication_replace: ImplicationDictionary = Tagger.tag_manager.get_implication(_tag.tag.left(1))
	_implication_replace.tag_implications.erase(_tag.tag)
	
	Tagger.tag_manager.relation_database[_implication_replace.implication_index].erase(_tag.tag)

	_implication_replace.save()
	clear_and_disable()


func clear_and_disable() -> void:
	open_pic_folder_button.disabled = true
	has_images_check_box.button_pressed = false
	has_images_check_box.disabled = true
	tag_suggestion_list.clear()
	tag_suggestion_line_edit.clear()
	tag_suggestion_line_edit.editable = false
	tag_prio_box.set_value_no_signal(0)
	tag_prio_box.editable = false
	tag_searcher.clear()
	name_line.clear()
	categories_menu.select(0)
	categories_menu.disabled = true
	parents.clear()
	parents_item_list.clear()
	add_parent_line_edit.editable = false
	wiki_edit.clear()
	wiki_edit.editable = false
	review_menu.set_item_disabled(review_menu.get_item_index(1), true)
	tag_update_button.disabled = true


func button_search_pressed() -> void:
	search_for_tag(tag_searcher.text)


func search_for_tag(new_text: String) -> void:
	preview_progress_load.value = 0
	
	images_to_display.clear()
	tag_reviewer_requester.cancel_side_requests()
	
	for child in lewd_pic_container.get_children():
		child.lewd_pic_pressed.disconnect(display_big_pic)
		child.queue_free()

	new_text = new_text.to_lower().strip_edges()
	
	new_text = Tagger.alias_database.get_alias(new_text)
		
	if new_text.is_empty():
		clear_and_disable()
		return
	
	if not Tagger.tag_manager.has_tag(new_text):
		clear_and_disable()
		return

	parents.clear()
	parents_item_list.clear()
	
	tag_suggestion_list.clear()
	suggestions_array.clear()
	tag_suggestion_line_edit.clear()
	
	var _tag: Tag = Tagger.tag_manager.get_tag(new_text)

	name_line.text = _tag.tag
	categories_menu.select(_tag.category)

	for parent_tag in _tag.parents:
		parents.append(parent_tag)
		parents_item_list.add_item(parent_tag)
	
	for suggested_tag in _tag.suggestions:
		suggestions_array.append(suggested_tag)
		tag_suggestion_list.add_item(suggested_tag)
	
	wiki_edit.clear()
	wiki_edit.text = _tag.wiki_entry
	tag_prio_box.set_value_no_signal(_tag.tag_priority)
	
	has_images_check_box.button_pressed = _tag.has_pictures
	
	if has_images_check_box.button_pressed:
		open_pic_folder_button.disabled = false
	
	has_images_check_box.disabled = false
	tag_suggestion_line_edit.editable = true
	tag_prio_box.editable = true
	add_parent_line_edit.editable = true
	categories_menu.disabled = false
	wiki_edit.editable = true
	tag_update_button.disabled = false
	review_menu.set_item_disabled(review_menu.get_item_index(1), false)
	tag_searcher.clear()
	
	
	if _tag.has_pictures and Tagger.settings.can_load_from_local():
		get_local_images(_tag.file_name.get_basename())
	else:
		preview_progress_load.value += 1
	
	if _tag.has_pictures and Tagger.settings.can_load_from_e6():
		search_web_images(_tag.tag)
	else:
		preview_progress_load.value += 4


func add_parent(parent_text: String) -> void:
	parent_text = parent_text.to_lower()
	
	if parent_text.is_empty() or parents.has(parent_text):
		add_parent_line_edit.clear()
		return
	
	parents.append(parent_text)
	parents_item_list.add_item(parent_text)
	add_parent_line_edit.clear()


func remove_parent(parent_id: int) -> void:
	parents.remove_at(parent_id)
	parents_item_list.remove_item(parent_id)


func add_suggested(new_suggestion: String) -> void:
	suggestions_array.append(new_suggestion)
	tag_suggestion_list.add_item(new_suggestion)
	tag_suggestion_line_edit.clear()


func remove_suggested(sug_id: int) -> void:
	suggestions_array.remove_at(sug_id)
	tag_suggestion_list.remove_item(sug_id)


func _on_timer_timeout() -> void:
	tag_update_button.text = \"Update Tag\"


func get_local_images(folder_name: String) -> void:
	if not DirAccess.dir_exists_absolute(Tagger.tag_images_path + folder_name):
		preview_progress_load.value += 1
		return
	
	var file_load_count: int = 0

	for file_name in DirAccess.get_files_at(Tagger.tag_images_path + folder_name):
		if Tagger.settings.local_review_amount <= file_load_count:
			break
		
		var tempstring: String = file_name
		
		var file_extension = tempstring.get_extension()
		
		if file_extension != \"png\" and file_extension != \"jpg\":
			continue
		
		var _new_image := Image.load_from_file(Tagger.tag_images_path + folder_name + \"/\" + file_name)
#		_new_image.load_from_file(Tagger.tag_images_path + folder_name + \"/\" + file_name)
		var _new_texture := ImageTexture.create_from_image(_new_image)
#		_new_texture.create_from_image(_new_image)
		
		var new_child_thumb: LewdTextureRect = lewd_display.instantiate()
		new_child_thumb.texture = _new_texture
		lewd_pic_container.add_child(new_child_thumb)
		new_child_thumb.lewd_pic_pressed.connect(display_big_pic)
		file_load_count += 1
	
	preview_progress_load.value += 1


func search_web_images(tag_names: String) -> void:
	tag_reviewer_requester.post_limit = Tagger.settings.e621_review_amount
	if tag_names.is_empty():
		tag_names = \"vaporeon -female -ambiguous_gender rating:explicit\"
	tag_reviewer_requester.match_name = [\"~type:jpg\", \"~type:png\", \"order:score\"] as Array[String]
	tag_reviewer_requester.match_name.append(tag_names)
	tag_reviewer_requester.get_posts_and_download()


func create_download_textures() -> void:
	for index in tag_reviewer_requester.downloaded_pictures.keys():
		var _new_texture := ImageTexture.create_from_image(tag_reviewer_requester.downloaded_pictures[index])
		var new_lewd_child: LewdTextureRect = lewd_display.instantiate()
		new_lewd_child.texture = _new_texture
		new_lewd_child.lewd_pic_pressed.connect(display_big_pic)
		lewd_pic_container.add_child(new_lewd_child)


func display_big_pic(texture_to_load: ImageTexture) -> void:
	full_screen_display.set_picture(texture_to_load)
	full_screen_display.visible = true
"

[sub_resource type="GDScript" id="GDScript_chh5e"]
resource_name = "settings_set_up"
script/source = "extends Control

@onready var h_slider = %HSlider
@onready var black_list: ItemList = %BlackList
@onready var recreate_database_btn = %RecreateDatabaseBtn
@onready var line_edit = %LineEdit

@onready var open_tags_button = $OpenTagsButton
@onready var settings_bar: PopupMenu = $SettingsBar/Settings

@onready var api_loader = $APILoader

var timer: Timer


func _ready():
	settings_bar.id_pressed.connect(settings_menu_press)
	
	open_tags_button.pressed.connect(open_tags_folder)
	h_slider.value = Tagger.settings.suggestion_strength
	line_edit.text = str(Tagger.settings.suggestion_strength)
	recreate_database_btn.pressed.connect(__recreate_database)
	
	timer = Timer.new()
	timer.wait_time = 2.0
	timer.autostart = false
	timer.one_shot = true	
	timer.timeout.connect(on_timer_timeout)
	add_child(timer)


func settings_menu_press(button_id: int) -> void:
	if button_id == 0:
		api_loader.show()


func open_api_screen() -> void:
	api_loader.visible = true


func open_tags_folder() -> void:
	OS.shell_open(ProjectSettings.globalize_path(Tagger.tags_path))


func __recreate_database() -> void:
	Tagger.tag_manager.recreate_implications()
	recreate_database_btn.text = \"Done!\"
	timer.start()


func on_timer_timeout() -> void:
	recreate_database_btn.text = \"Recreate tag database\"
"

[sub_resource type="GDScript" id="GDScript_y3wef"]
script/source = "extends Control

@onready var h_slider: HSlider = $HSlider
@onready var line_edit: LineEdit = $LineEdit


func _ready():
	h_slider.drag_ended.connect(_drag_ended)
	h_slider.value_changed.connect(_display_update)
	#percentage_display.text_changed.connect(_text_set)
	line_edit.text_submitted.connect(_update_percentage)


func _update_percentage(new_text: String) -> void:
	h_slider.value = int(new_text)
	Tagger.settings.suggestion_strength = h_slider.value
#	Tagger.settings.save()


func _drag_ended(value_changed: bool) -> void:
	if value_changed:
		Tagger.settings.suggestion_strength = h_slider.value
#		Tagger.settings.save()


func _display_update(value) -> void:
	if str(value) != line_edit.text:
		line_edit.text = str(value)

"

[sub_resource type="GDScript" id="GDScript_lqhue"]
resource_name = "review_img_button_script"
script/source = "extends CheckButton

@onready var e621_load_button: CheckButton = $VBoxContainer/ToggleButtons/e621LoadButton
@onready var local_load_button: CheckButton = $VBoxContainer/ToggleButtons/LocalLoadButton
@onready var e_621_spin_box: SpinBox = $VBoxContainer/AmountToLoad/e621SpinBox
@onready var local_spin_box: SpinBox = $VBoxContainer/AmountToLoad/LocalSpinBox

func _ready():

	e621_load_button.toggled.connect(toggle_e6_load)
	e_621_spin_box.value_changed.connect(e6_spinbox_value_changed)
	
	local_load_button.toggled.connect(toggle_local_load)
	local_spin_box.value_changed.connect(local_spinbox_value_changed)
	
	button_pressed = Tagger.settings.load_review_images
	
	e621_load_button.disabled = not button_pressed
	local_load_button.disabled = not button_pressed
	e_621_spin_box.editable = button_pressed
	local_spin_box.editable = button_pressed

	e621_load_button.button_pressed = Tagger.settings.load_review_e621
	e_621_spin_box.set_value_no_signal(Tagger.settings.e621_review_amount)
	
	local_load_button.button_pressed = Tagger.settings.load_review_local
	local_spin_box.set_value_no_signal(Tagger.settings.local_review_amount)

	self.toggled.connect(toggle_sub_buttons)


func local_spinbox_value_changed(new_value: float) -> void:
	var _value: int = int(new_value)
	Tagger.settings.local_review_amount = _value
	

func e6_spinbox_value_changed(new_value: float) -> void:
	var _value: int = int(new_value)
	Tagger.settings.e621_review_amount = _value


func toggle_sub_buttons(toggle_state: bool) -> void:
	Tagger.settings.load_review_images = toggle_state
	e621_load_button.disabled = not toggle_state
	local_load_button.disabled = not toggle_state
	e_621_spin_box.editable = toggle_state
	local_spin_box.editable = toggle_state


func toggle_e6_load(toggle_state: bool) -> void:
	Tagger.settings.load_review_e621 = toggle_state


func toggle_local_load(toggle_state: bool) -> void:
	Tagger.settings.load_review_local = toggle_state
"

[sub_resource type="GDScript" id="GDScript_jmlhj"]
resource_name = "aliases_menu"
script/source = "extends Control

@onready var aliases_tree: Tree = $Aliases
@onready var old_alias: LineEdit = $OldAlias
@onready var new_alias: LineEdit = $NewAlias
@onready var remove_alias_button: Button = $RemoveAliasButton
@onready var add_alias_button: Button = $AddAliasButton


func _ready():
	old_alias.text_changed.connect(old_alias_update)
	new_alias.text_changed.connect(new_alias_update)
	remove_alias_button.pressed.connect(remove_alias)
	add_alias_button.pressed.connect(add_alias)
	
	old_alias.text_submitted.connect(submit_old_alias)
	new_alias.text_submitted.connect(submit_new_alias)


func submit_new_alias(_text_submitted: String) -> void:
	if not add_alias_button.disabled:
		add_alias()


func submit_old_alias(_text_submitted: String) -> void:
	if not remove_alias_button.disabled:
		remove_alias()


func old_alias_update(new_text: String) -> void:
	if new_text != \"\":
		if remove_alias_button.disabled:
			remove_alias_button.disabled = false
		if new_alias.text != \"\" and add_alias_button.disabled:
			add_alias_button.disabled = false
	elif new_text == \"\":
		if not remove_alias_button.disabled:
			remove_alias_button.disabled = true
		if not add_alias_button.disabled:
			add_alias_button.disabled = true
		

func new_alias_update(new_text: String) -> void:
	if old_alias.text != \"\" and new_text != \"\" and add_alias_button.disabled:
		add_alias_button.disabled = false
	elif (old_alias.text == \"\" or new_text == \"\") and not add_alias_button.disabled:
		add_alias_button.disabled = true


func add_alias() -> void:
	var _old_string: String = old_alias.text
	var _new_string: String = new_alias.text
	
	_old_string = _old_string.strip_edges().to_lower().replace(\"_\", \" \")
	_new_string = _new_string.strip_edges().to_lower().replace(\"_\", \" \")
	
	if Tagger.alias_database.alias_exitst(_old_string, _new_string):
		old_alias.clear()
		new_alias.clear()
		return
	
	if Tagger.alias_database.aliases.values().has(_new_string): # Level exists
		var _target_branch = _new_string
		
		var _root: TreeItem = aliases_tree.get_root()
		var _current_branch: TreeItem = _root.get_first_child()
		
		for ignored in range(_root.get_child_count()):
			if _target_branch == _current_branch.get_text(0):
				aliases_tree.create_tree_item(_old_string, _current_branch)
				break
			else:
				_current_branch = _current_branch.get_next()
	else: # Level doesn't exist
		aliases_tree.create_item_and_subitem(_new_string, aliases_tree.get_root(), _old_string)
	
	Tagger.alias_database.add_alias(_old_string, _new_string)
	Tagger.alias_database.save()
	old_alias.clear()
	new_alias.clear()


func remove_alias() -> void:
	var _old_string: String = old_alias.text
	_old_string = _old_string.strip_edges().to_lower()
	
	
	if not Tagger.alias_database.has_alias(_old_string):
		old_alias.clear()
		return
	
	var _target_branch = Tagger.alias_database.get_alias(_old_string)
	var _root: TreeItem = aliases_tree.get_root()
	var _level: TreeItem = _root.get_first_child()
	
	for index in range(_root.get_child_count()):
		if _target_branch == _level.get_text(0):
			var _aliases_list = _level.get_first_child()
			
			for ignore in range(_level.get_child_count()):
				if _aliases_list.get_text(0) == _old_string:
					_aliases_list.free()
					if _level.get_child_count() == 0:
						_level.free()
					break
				else:
					_aliases_list = _aliases_list.get_next()
			break
		else:
			_level = _level.get_next()
	
	Tagger.alias_database.remove_alias(_old_string)
	old_alias.clear()

"

[sub_resource type="GDScript" id="GDScript_hr4cx"]
resource_name = "test_script"
script/source = "extends Tree

func _ready():
	var _alias_dict: Dictionary = Tagger.alias_database.get_alias_dictionary()
	
	var _root_level = create_item()
	_root_level.set_text(0, \"Aliases\")
	
	for correct_alias in _alias_dict.keys():
		var _item_model = create_item(_root_level)
		_item_model.set_text(0, correct_alias)
		_item_model.collapsed = true

		for aliased_item in _alias_dict[correct_alias]:
			create_tree_item(aliased_item, _item_model)
	

func create_tree_item(_item_text: String, _parent_item):
	var item = create_item(_parent_item)
	item.set_text(0, _item_text)


func create_item_and_subitem(item_text: String, _parent_item, subitem_string: String) -> void:
	var parent_item = create_item(_parent_item)
	parent_item.set_text(0, item_text)
	
	var sub_item = create_item(parent_item)
	sub_item.set_text(0, subitem_string)

"

[sub_resource type="GDScript" id="GDScript_mqjmn"]
resource_name = "blacklist_control"
script/source = "extends Control

@onready var black_list = %BlackList
@onready var add_to_black = %AddToBlack


func _ready():
	add_to_black.text_submitted.connect(add_to_blacklist)
	black_list.item_activated.connect(remove_from_blacklist)
	
	for item in Tagger.settings_lists.suggestion_blacklist:
		black_list.add_item(item)


func add_to_blacklist(new_item: String) -> void:
	new_item = new_item.to_lower().strip_edges().replace(\"_\", \" \")
	
	if Tagger.settings_lists.suggestion_blacklist.has(new_item):
		return
	
	black_list.add_item(new_item)
	Tagger.settings_lists.add_to_blacklist(new_item)
	add_to_black.clear()


func remove_from_blacklist(index_id) -> void:
	var _target = black_list.get_item_text(index_id)
	black_list.remove_item(index_id)
	Tagger.settings_lists.remove_from_blacklist(_target)

"

[sub_resource type="GDScript" id="GDScript_dvmq4"]
resource_name = "constants_tags_script"
script/source = "extends Control


var constant_tags: Array[String] = []

@onready var constants_line_edit = $ConstantsLineEdit
@onready var constants_item_list = $TagList/ConstantsItemList


func _ready():
	for item in Tagger.settings_lists.constant_tags:
		constants_item_list.add_item(item)
		constant_tags.append(item)
	
	constants_item_list.item_activated.connect(remove_constant)
	constants_line_edit.text_submitted.connect(add_constant)


func add_constant(new_constant: String) -> void:
	new_constant = new_constant.to_lower().strip_edges().replace(\"_\", \" \")
	if constant_tags.has(new_constant):
		constants_line_edit.clear()
		return
	
	constants_item_list.add_item(new_constant)
	constant_tags.append(new_constant)
	Tagger.settings_lists.constant_tags.append(new_constant)
	constants_line_edit.clear()


func remove_constant(constant_id: int) -> void:
	var constant_name: String = constants_item_list.get_item_text(constant_id)
	constant_tags.remove_at(constant_id)
	constants_item_list.remove_item(constant_id)
	Tagger.settings_lists.remove_from_constant_tags(constant_name)

"

[sub_resource type="GDScript" id="GDScript_i3qtj"]
script/source = "extends Control

@onready var invalid_tags_line_edit = $InvalidTagsLineEdit
@onready var invalid_tag_list = $InvalidItemList


func _ready() -> void:
	for invalid_tag in Tagger.settings_lists.invalid_tags:
		invalid_tag_list.add_item(invalid_tag)
	
	invalid_tags_line_edit.text_submitted.connect(add_to_invalid_tags)
	invalid_tag_list.item_activated.connect(remove_from_invalids)
	

func add_to_invalid_tags(tag_to_add: String) -> void:
	if not Tagger.settings_lists.invalid_tags.has(tag_to_add):
		invalid_tag_list.add_item(tag_to_add)
		Tagger.settings_lists.invalid_tags.append(tag_to_add)
	invalid_tags_line_edit.clear()


func remove_from_invalids(tag_id: int) -> void:
	var tag_text: String = invalid_tag_list.get_item_text(tag_id)
	invalid_tag_list.remove_item(tag_id)
	Tagger.settings_lists.remove_from_invalids(tag_text)
"

[sub_resource type="GDScript" id="GDScript_7dq25"]
resource_name = "api_loader_script"
script/source = "extends Control

@onready var close_button: Button = $AllItems/CloseButton


func _ready():
	self.hide()
	close_button.pressed.connect(hide_api_loader)


func hide_api_loader() -> void:
	self.visible = false
"

[sub_resource type="GDScript" id="GDScript_ert6n"]
resource_name = "load_api_key"
script/source = "extends Control

@onready var api_key: LineEdit = $APIKey
@onready var reveal_pass_button: CheckButton = $APIKey/RevealPassButton
@onready var load_button: Button = $LoadButton
@onready var button_text_timer: Timer = $ButtonTextTimer


func _ready():
	reveal_pass_button.toggled.connect(reveal_pass)
	button_text_timer.timeout.connect(restore_button_text)
	load_button.pressed.connect(load_api_key)


func load_api_key() -> void:
	if not FileAccess.file_exists(Tagger.api_file_path):
		api_key.clear()
		load_button.text = \"Missing File\"
		button_text_timer.start()
		return
	
	var config_file := ConfigFile.new()
	
	if config_file.load_encrypted_pass(Tagger.api_file_path, api_key.text) != OK:
		api_key.clear()
		load_button.text = \"Wrong Password\"
		button_text_timer.start()
		return
	
	Tagger.e6_headers_data[\"Authorization\"] = config_file.get_value(\"API_Key\", \"Authorization\")
	load_button.text = \"Success!\"
	api_key.clear()
	button_text_timer.start()


func restore_button_text() -> void:
	load_button.text = \"Load Key\"


func reveal_pass(is_enabled: bool) -> void:
	api_key.secret = not is_enabled
"

[sub_resource type="GDScript" id="GDScript_gagfo"]
resource_name = "login_api"
script/source = "extends Control

@onready var user_line_edit: LineEdit = $UserLineEdit
@onready var key_line_edit: LineEdit = $KeyLineEdit
@onready var remember_check: CheckBox = $RememberCheck
@onready var encrypt_key_line_edit: LineEdit = $RememberCheck/EncryptKeyLineEdit
@onready var reveal_encrypt: CheckButton = $RememberCheck/EncryptKeyLineEdit/RevealEncrypt
@onready var save_btn: Button = $SaveBTN


func _ready():
	reveal_encrypt.toggled.connect(toggle_secret)
	save_btn.pressed.connect(save_key)


func toggle_secret(is_hidden: bool) -> void:
	encrypt_key_line_edit.secret = not is_hidden


func save_key() -> void:
	Tagger.e6_headers_data[\"Authorization\"] = str(Marshalls.utf8_to_base64(user_line_edit.text + \":\" + key_line_edit.text))
	
	if remember_check.button_pressed:
		var save_config_file := ConfigFile.new()
		save_config_file.set_value(\"API_Key\", \"Authorization\", Tagger.e6_headers_data[\"Authorization\"])
		save_config_file.save_encrypted_pass(Tagger.api_file_path, encrypt_key_line_edit.text)
		encrypt_key_line_edit.clear()
	
	user_line_edit.clear()
	key_line_edit.clear()
	
	print(Tagger.e6_headers_data[\"Authorization\"])
	
"

[node name="MainApplication" type="Control"]
clip_contents = true
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("1_3k5pd")

[node name="ColorRect" type="ColorRect" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.25098, 0.282353, 0.341176, 1)

[node name="MenuBar" type="MenuBar" parent="."]
layout_mode = 0
offset_left = 8.0
offset_top = 8.0
offset_right = 64.0
offset_bottom = 48.0

[node name="Menu" type="PopupMenu" parent="MenuBar"]
unique_name_in_owner = true
size = Vector2i(132, 170)
item_count = 6
item_0/text = "Tag list"
item_0/id = 0
item_1/text = "Load"
item_1/id = 2
item_2/text = "Create Tag"
item_2/id = 4
item_3/text = "Review tag"
item_3/id = 5
item_4/text = "Preferences"
item_4/id = 3
item_5/text = "Exit"
item_5/id = 1

[node name="Tagger" type="Control" parent="."]
visible = false
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_top = 48.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("2_o722f")

[node name="TaggerMenuBar" type="MenuBar" parent="Tagger"]
layout_mode = 0
offset_left = 64.0
offset_top = -40.0
offset_right = 125.0

[node name="Tagger" type="PopupMenu" parent="Tagger/TaggerMenuBar"]
size = Vector2i(250, 170)
hide_on_checkable_item_selection = false
item_count = 6
item_0/text = "Tag lists"
item_0/id = 99
item_0/disabled = true
item_0/separator = true
item_1/text = "Clear all"
item_1/id = 0
item_2/text = "Clear suggestions"
item_2/id = 1
item_3/text = "Suggestions"
item_3/id = 100
item_3/disabled = true
item_3/separator = true
item_4/text = "Enable online suggestions"
item_4/checkable = 1
item_4/checked = true
item_4/id = 2
item_5/text = "Enable offline suggestions"
item_5/checkable = 1
item_5/checked = true
item_5/id = 3

[node name="CurrentTags" type="Control" parent="Tagger"]
anchors_preset = 0
offset_left = 16.0
offset_right = 448.0
offset_bottom = 616.0

[node name="ItemList" type="ItemList" parent="Tagger/CurrentTags"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_colors/guide_color = Color(0.482353, 0.482353, 0.482353, 1)
theme_override_constants/h_separation = 10
max_columns = 2
same_column_width = true
fixed_icon_size = Vector2i(10, 10)

[node name="LineEdit" type="LineEdit" parent="Tagger"]
layout_mode = 0
offset_left = 16.0
offset_top = 624.0
offset_right = 400.0
offset_bottom = 655.0
placeholder_text = "Add Tag"

[node name="OpenAutoCompleteBTN" type="Button" parent="Tagger"]
layout_mode = 0
offset_left = 408.0
offset_top = 624.0
offset_right = 448.0
offset_bottom = 656.0
tooltip_text = "Search for tags"
icon = ExtResource("4_83kdk")
icon_alignment = 1
expand_icon = true

[node name="Label" type="Label" parent="Tagger"]
layout_mode = 0
offset_left = 464.0
offset_top = -32.0
offset_right = 587.0
text = "Suggested Tags:"

[node name="Suggested" type="Control" parent="Tagger"]
anchors_preset = 0
offset_left = 464.0
offset_right = 656.0
offset_bottom = 616.0
metadata/_edit_group_ = true

[node name="SuggestedList" type="ItemList" parent="Tagger/Suggested"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_colors/guide_color = Color(0.482353, 0.482353, 0.482353, 1)
same_column_width = true

[node name="Implied Tags" type="Control" parent="Tagger"]
anchors_preset = 0
offset_left = 672.0
offset_right = 864.0
offset_bottom = 616.0

[node name="ImpliedList" type="ItemList" parent="Tagger/Implied Tags"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
same_column_width = true

[node name="Label" type="Label" parent="Tagger/Implied Tags"]
layout_mode = 0
offset_top = -32.0
offset_right = 95.0
text = "Implied tags:"

[node name="CleanSuggestionsButton" type="Button" parent="Tagger"]
layout_mode = 0
offset_left = 464.0
offset_top = 624.0
offset_right = 864.0
offset_bottom = 655.0
tooltip_text = "Removes all the suggested tags that exist inside the implied tags or manually added tags."
text = "Clean Suggestions"

[node name="GenerateList" type="Button" parent="Tagger"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 880.0
offset_top = 624.0
offset_right = 1088.0
offset_bottom = 655.0
text = "Generate List"

[node name="CopyToClipboard" type="Button" parent="Tagger"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 1104.0
offset_top = 624.0
offset_right = 1264.0
offset_bottom = 655.0
text = "Copy to Clipboard"

[node name="FinalTagList" type="TextEdit" parent="Tagger"]
layout_mode = 0
offset_left = 880.0
offset_top = 40.0
offset_right = 1264.0
offset_bottom = 616.0
placeholder_text = "Final tags"
editable = false
wrap_mode = 1
scroll_smooth = true

[node name="AddAutoComplete" type="Control" parent="Tagger"]
visible = false
anchors_preset = 0
offset_top = -32.0
offset_right = 1280.0
offset_bottom = 688.0

[node name="ColorRect" type="ColorRect" parent="Tagger/AddAutoComplete"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.184314, 0.184314, 0.184314, 0.588235)

[node name="QuickSearch" type="Control" parent="Tagger/AddAutoComplete"]
anchors_preset = 0
offset_left = 16.0
offset_top = 352.0
offset_right = 576.0
offset_bottom = 664.0
script = SubResource("GDScript_6n0ht")

[node name="ColorRect" type="ColorRect" parent="Tagger/AddAutoComplete/QuickSearch"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.454902, 0.505882, 0.580392, 1)

[node name="MArc" type="ColorRect" parent="Tagger/AddAutoComplete/QuickSearch"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 4.0
offset_top = 4.0
offset_right = -4.0
offset_bottom = -4.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.25, 0.28125, 0.339844, 1)

[node name="AutoCompleteItemList" type="ItemList" parent="Tagger/AddAutoComplete/QuickSearch"]
layout_mode = 0
offset_left = 24.0
offset_top = 16.0
offset_right = 536.0
offset_bottom = 256.0
select_mode = 1
fixed_icon_size = Vector2i(10, 10)

[node name="SomeFixOption" type="OptionButton" parent="Tagger/AddAutoComplete/QuickSearch"]
layout_mode = 0
offset_left = 24.0
offset_top = 264.0
offset_right = 119.0
offset_bottom = 295.0
item_count = 3
selected = 0
popup/item_0/text = "Prefix_"
popup/item_0/id = 0
popup/item_1/text = "_Sufix"
popup/item_1/id = 1
popup/item_2/text = "_Both_"
popup/item_2/id = 2

[node name="AutoComLineEdit" type="LineEdit" parent="Tagger/AddAutoComplete/QuickSearch"]
layout_mode = 0
offset_left = 128.0
offset_top = 264.0
offset_right = 368.0
offset_bottom = 296.0
placeholder_text = "Enter tag"

[node name="CancelAutoButton" type="Button" parent="Tagger/AddAutoComplete/QuickSearch"]
layout_mode = 0
offset_left = 472.0
offset_top = 264.0
offset_right = 536.0
offset_bottom = 295.0
text = "Close"

[node name="e621RequesterQuickSearch" parent="Tagger/AddAutoComplete/QuickSearch" instance=ExtResource("2_4gepn")]
max_parallel_requests = 0
timeout_time = 5.0
order = "count"

[node name="AddSelectedButton" type="Button" parent="Tagger/AddAutoComplete/QuickSearch"]
layout_mode = 0
offset_left = 376.0
offset_top = 264.0
offset_right = 464.0
offset_bottom = 295.0
tooltip_text = "Adds all selected tags to the main list"
text = "Add"

[node name="RequestCooldownTimer" type="Timer" parent="Tagger/AddAutoComplete"]
one_shot = true

[node name="TargetPlatformButton" type="OptionButton" parent="Tagger"]
layout_mode = 0
offset_left = 1016.0
offset_right = 1264.0
offset_bottom = 31.0
alignment = 1
item_count = 3
selected = 0
popup/item_0/text = "e621/Itaku"
popup/item_0/id = 0
popup/item_1/text = "Postybirb"
popup/item_1/id = 1
popup/item_2/text = "Hydrus"
popup/item_2/id = 2
script = ExtResource("5_03qrr")

[node name="Label" type="Label" parent="Tagger/TargetPlatformButton"]
layout_mode = 0
offset_left = -144.0
offset_right = -8.0
offset_bottom = 32.0
text = "Target platform:"
horizontal_alignment = 2
vertical_alignment = 1

[node name="ListLoader" type="Control" parent="."]
visible = false
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_top = 48.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("3_nde26")

[node name="Label" type="Label" parent="ListLoader"]
layout_mode = 0
offset_left = 720.0
offset_top = -24.0
offset_right = 782.0
offset_bottom = 2.0
text = "Preview"

[node name="InputTags" type="TextEdit" parent="ListLoader"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 8.0
offset_right = 704.0
offset_bottom = 600.0
wrap_mode = 1

[node name="Separator" type="TextEdit" parent="ListLoader"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 8.0
offset_top = 616.0
offset_right = 120.0
offset_bottom = 656.0
placeholder_text = "Separator"
draw_spaces = true

[node name="Whitespace" type="TextEdit" parent="ListLoader"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 128.0
offset_top = 616.0
offset_right = 240.0
offset_bottom = 656.0
placeholder_text = "Whitespace"
draw_spaces = true

[node name="TransferTags" type="Button" parent="ListLoader"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 256.0
offset_top = 616.0
offset_right = 576.0
offset_bottom = 648.0
text = "Transfer tags"

[node name="CheckBox" type="CheckBox" parent="ListLoader"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 584.0
offset_top = 616.0
offset_right = 700.0
offset_bottom = 648.0
text = "Replace list"

[node name="PreviewTags" type="Button" parent="ListLoader"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 720.0
offset_top = 624.0
offset_right = 1264.0
offset_bottom = 656.0
text = "Generate preview"

[node name="PreviewList" type="ItemList" parent="ListLoader"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 720.0
offset_right = 1264.0
offset_bottom = 600.0
theme_override_constants/h_separation = 10
max_columns = 0

[node name="TagCreator" type="Control" parent="."]
visible = false
anchors_preset = 0
offset_top = 64.0
offset_right = 1280.0
offset_bottom = 720.0
script = SubResource("GDScript_w31il")

[node name="TagToAddLineEdit" type="LineEdit" parent="TagCreator"]
layout_mode = 0
offset_left = 32.0
offset_right = 368.0
offset_bottom = 31.0
placeholder_text = "Tag to add"

[node name="CategoriesMenu" type="OptionButton" parent="TagCreator"]
layout_mode = 0
offset_left = 112.0
offset_top = 48.0
offset_right = 256.0
offset_bottom = 80.0
item_count = 11
selected = 0
popup/item_0/text = "General"
popup/item_0/id = 0
popup/item_1/text = "Artist"
popup/item_1/id = 1
popup/item_2/text = "Series"
popup/item_2/id = 2
popup/item_3/text = "Character"
popup/item_3/id = 3
popup/item_4/text = "Species"
popup/item_4/id = 4
popup/item_5/text = "Gender"
popup/item_5/id = 5
popup/item_6/text = "Lore"
popup/item_6/id = 6
popup/item_7/text = "Genitals"
popup/item_7/id = 7
popup/item_8/text = "Objects"
popup/item_8/id = 8
popup/item_9/text = "Clothing"
popup/item_9/id = 9
popup/item_10/text = "Accesories"
popup/item_10/id = 10

[node name="Label" type="Label" parent="TagCreator/CategoriesMenu"]
layout_mode = 0
offset_left = -88.0
offset_bottom = 32.0
text = "Category:"
vertical_alignment = 1

[node name="TagPrioBox" type="SpinBox" parent="TagCreator"]
layout_mode = 0
offset_left = 352.0
offset_top = 48.0
offset_right = 512.0
offset_bottom = 79.0
allow_greater = true
allow_lesser = true
alignment = 1
select_all_on_focus = true

[node name="Label" type="Label" parent="TagCreator/TagPrioBox"]
layout_mode = 0
offset_left = -80.0
offset_bottom = 32.0
text = "Priority:"
vertical_alignment = 1

[node name="AddParentLineEdit" type="LineEdit" parent="TagCreator"]
layout_mode = 0
offset_left = 24.0
offset_top = 536.0
offset_right = 256.0
offset_bottom = 576.0
placeholder_text = "Add new parent tag"

[node name="SuggestionItemList" type="ItemList" parent="TagCreator"]
layout_mode = 0
offset_left = 272.0
offset_top = 104.0
offset_right = 496.0
offset_bottom = 528.0

[node name="SugestionLineEdit" type="LineEdit" parent="TagCreator"]
layout_mode = 0
offset_left = 272.0
offset_top = 536.0
offset_right = 496.0
offset_bottom = 576.0
tooltip_text = "Tags to suggest if this tag is used."
placeholder_text = "Suggestions"

[node name="WikiInfo" type="TextEdit" parent="TagCreator"]
layout_mode = 0
offset_left = 520.0
offset_right = 1256.0
offset_bottom = 576.0
placeholder_text = "Wiki Info"
wrap_mode = 1
scroll_smooth = true

[node name="CreateTagsButton" type="Button" parent="TagCreator"]
layout_mode = 0
offset_left = 24.0
offset_top = 592.0
offset_right = 1256.0
offset_bottom = 640.0
disabled = true
text = "Create Tag"

[node name="ParentItemList" type="ItemList" parent="TagCreator"]
layout_mode = 0
offset_left = 24.0
offset_top = 104.0
offset_right = 256.0
offset_bottom = 528.0

[node name="HasImagesCheckBox" type="CheckBox" parent="TagCreator"]
layout_mode = 0
offset_left = 376.0
offset_right = 493.0
offset_bottom = 31.0
tooltip_text = "If the tag has images associated to it. When reviewing it'll try to load images."
button_pressed = true
text = "Has Images"

[node name="TagReviewer" type="Control" parent="."]
anchors_preset = 0
offset_left = 1.0
offset_top = 40.0
offset_right = 1281.0
offset_bottom = 720.0
mouse_filter = 1
script = SubResource("GDScript_lfssu")

[node name="ReviewerMenuBar" type="MenuBar" parent="TagReviewer"]
layout_mode = 0
offset_left = 71.0
offset_top = -32.0
offset_right = 134.0
offset_bottom = 8.0

[node name="Review" type="PopupMenu" parent="TagReviewer/ReviewerMenuBar"]
size = Vector2i(172, 143)
hide_on_checkable_item_selection = false
item_count = 2
item_0/text = "Tags"
item_0/id = 0
item_0/separator = true
item_1/text = "Delete Tag"
item_1/id = 1
item_1/disabled = true

[node name="TagSearcher" type="LineEdit" parent="TagReviewer"]
layout_mode = 0
offset_left = 7.0
offset_top = 24.0
offset_right = 286.0
offset_bottom = 55.0

[node name="TagSearchButton" type="Button" parent="TagReviewer/TagSearcher"]
layout_mode = 0
offset_left = 287.0
offset_right = 399.0
offset_bottom = 31.0
text = "Search"

[node name="NameLine" type="LineEdit" parent="TagReviewer"]
layout_mode = 0
offset_left = 103.0
offset_top = 72.0
offset_right = 278.0
offset_bottom = 103.0
alignment = 1
editable = false

[node name="TagName" type="Label" parent="TagReviewer/NameLine"]
layout_mode = 0
offset_left = -96.0
offset_right = -5.0
offset_bottom = 32.0
text = "Tag Name:"
vertical_alignment = 1

[node name="HasImagesCheckBox" type="CheckBox" parent="TagReviewer"]
layout_mode = 0
offset_left = 286.0
offset_top = 72.0
offset_right = 406.0
offset_bottom = 103.0
disabled = true
text = "Has images"

[node name="CategoriesMenu" type="OptionButton" parent="TagReviewer"]
layout_mode = 0
offset_left = 127.0
offset_top = 112.0
offset_right = 407.0
offset_bottom = 144.0
disabled = true
alignment = 1
item_count = 11
selected = 0
popup/item_0/text = "General"
popup/item_0/id = 0
popup/item_1/text = "Artist"
popup/item_1/id = 1
popup/item_2/text = "Series"
popup/item_2/id = 2
popup/item_3/text = "Character"
popup/item_3/id = 3
popup/item_4/text = "Species"
popup/item_4/id = 4
popup/item_5/text = "Gender"
popup/item_5/id = 5
popup/item_6/text = "Lore"
popup/item_6/id = 6
popup/item_7/text = "Genitals"
popup/item_7/id = 7
popup/item_8/text = "Objects"
popup/item_8/id = 8
popup/item_9/text = "Clothing"
popup/item_9/id = 9
popup/item_10/text = "Accesories"
popup/item_10/id = 10

[node name="CategoryLabel" type="Label" parent="TagReviewer/CategoriesMenu"]
layout_mode = 0
offset_left = -120.0
offset_right = -8.0
offset_bottom = 32.0
text = "Tag Category:"
vertical_alignment = 1

[node name="TagPrioBox" type="SpinBox" parent="TagReviewer"]
layout_mode = 0
offset_left = 79.0
offset_top = 160.0
offset_right = 223.0
offset_bottom = 191.0
tooltip_text = "Refers to what tags will come first when GENERATING the tag list. The items added first are the ones of highest priority."
allow_greater = true
allow_lesser = true
alignment = 1
editable = false

[node name="Priority" type="Label" parent="TagReviewer/TagPrioBox"]
layout_mode = 0
offset_left = -72.0
offset_right = -10.0
offset_bottom = 32.0
text = "Priority:"
vertical_alignment = 1

[node name="OpenPicFolder" type="Button" parent="TagReviewer"]
layout_mode = 0
offset_left = 239.0
offset_top = 160.0
offset_right = 407.0
offset_bottom = 191.0
disabled = true
text = "Open picture folder"

[node name="ParentsLabel" type="Label" parent="TagReviewer"]
layout_mode = 0
offset_left = 7.0
offset_top = 208.0
offset_right = 119.0
offset_bottom = 240.0
text = "Parent Tags:"
vertical_alignment = 1

[node name="ParentsItemList" type="ItemList" parent="TagReviewer"]
layout_mode = 0
offset_left = 7.0
offset_top = 240.0
offset_right = 198.0
offset_bottom = 552.0

[node name="AddParentLineEdit" type="LineEdit" parent="TagReviewer"]
layout_mode = 0
offset_left = 7.0
offset_top = 560.0
offset_right = 198.0
offset_bottom = 599.0
placeholder_text = "Add new parent"
editable = false

[node name="TagSuggestionLabel" type="Label" parent="TagReviewer"]
layout_mode = 0
offset_left = 214.0
offset_top = 208.0
offset_right = 334.0
offset_bottom = 240.0
text = "Suggestions:"
vertical_alignment = 1

[node name="TagSuggestionList" type="ItemList" parent="TagReviewer"]
layout_mode = 0
offset_left = 214.0
offset_top = 240.0
offset_right = 406.0
offset_bottom = 552.0

[node name="TagSuggestionLineEdit" type="LineEdit" parent="TagReviewer"]
layout_mode = 0
offset_left = 214.0
offset_top = 560.0
offset_right = 406.0
offset_bottom = 600.0
placeholder_text = "Add new suggestion"
editable = false

[node name="WikiEdit" type="TextEdit" parent="TagReviewer"]
layout_mode = 0
offset_left = 422.0
offset_top = 24.0
offset_right = 950.0
offset_bottom = 664.0
placeholder_text = "Wiki Info"
editable = false
wrap_mode = 1

[node name="WikiLabel" type="Label" parent="TagReviewer/WikiEdit"]
layout_mode = 0
offset_top = -32.0
offset_right = 112.0
text = "Wiki Entry:"
vertical_alignment = 1

[node name="TagUpdate" type="Button" parent="TagReviewer"]
layout_mode = 0
offset_left = 7.0
offset_top = 616.0
offset_right = 406.0
offset_bottom = 664.0
disabled = true
text = "Update Tag"

[node name="Imeges" type="Control" parent="TagReviewer"]
anchors_preset = 0
offset_left = 958.0
offset_top = 24.0
offset_right = 1271.0
offset_bottom = 664.0

[node name="PreviewProgressLoad" type="ProgressBar" parent="TagReviewer/Imeges"]
layout_mode = 0
offset_top = -8.0
offset_right = 313.0
max_value = 5.0
step = 1.0
show_percentage = false

[node name="ColorRect" type="ColorRect" parent="TagReviewer/Imeges"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.321569, 0.356863, 0.427451, 1)

[node name="ScrollContainer" type="ScrollContainer" parent="TagReviewer/Imeges"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="LewdPicsContainer" type="VBoxContainer" parent="TagReviewer/Imeges/ScrollContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="TagReviewerRequester" parent="TagReviewer" node_paths=PackedStringArray("progress_bar") instance=ExtResource("2_4gepn")]
max_parallel_requests = 1
progress_bar = NodePath("../Imeges/PreviewProgressLoad")
timeout_time = 20.0
post_limit = 4
get_sample_if_available = false

[node name="FullScreenDisplay" parent="TagReviewer" instance=ExtResource("7_bjv2t")]
visible = false
layout_mode = 1
anchors_preset = -1
anchor_top = -0.0588235

[node name="Settings" type="Control" parent="."]
visible = false
anchors_preset = 0
offset_top = 56.0
offset_right = 1280.0
offset_bottom = 720.0
script = SubResource("GDScript_chh5e")

[node name="Strength" type="Control" parent="Settings"]
anchors_preset = 0
offset_left = 32.0
offset_top = 32.0
offset_right = 552.0
offset_bottom = 64.0
script = SubResource("GDScript_y3wef")

[node name="HSlider" type="HSlider" parent="Settings/Strength"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 168.0
offset_right = 384.0
offset_bottom = 32.0

[node name="Label" type="Label" parent="Settings/Strength/HSlider"]
layout_mode = 0
offset_left = -168.0
offset_right = -8.0
offset_bottom = 32.0
text = "Suggestion Strength:"
horizontal_alignment = 1
vertical_alignment = 1

[node name="LineEdit" type="LineEdit" parent="Settings/Strength"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 408.0
offset_right = 475.063
offset_bottom = 31.0
placeholder_text = "100"
alignment = 1
max_length = 3
middle_mouse_paste_enabled = false
select_all_on_focus = true

[node name="Percentage" type="Label" parent="Settings/Strength/LineEdit"]
layout_mode = 0
offset_left = 72.0
offset_right = 96.0
offset_bottom = 32.0
theme_override_font_sizes/font_size = 20
text = "%"
horizontal_alignment = 1
vertical_alignment = 1

[node name="LoadImagesButton" type="CheckButton" parent="Settings"]
layout_mode = 0
offset_left = 32.0
offset_top = 72.0
offset_right = 233.0
offset_bottom = 103.0
text = "Load review images"
script = SubResource("GDScript_lqhue")

[node name="ColorRect" type="ColorRect" parent="Settings/LoadImagesButton"]
layout_mode = 0
offset_left = 208.0
offset_right = 480.0
offset_bottom = 88.0
color = Color(0.188235, 0.215686, 0.258824, 1)

[node name="VBoxContainer" type="VBoxContainer" parent="Settings/LoadImagesButton"]
layout_mode = 0
offset_left = 208.0
offset_right = 480.0
offset_bottom = 88.0

[node name="ToggleButtons" type="HBoxContainer" parent="Settings/LoadImagesButton/VBoxContainer"]
layout_mode = 2
alignment = 1

[node name="e621LoadButton" type="CheckButton" parent="Settings/LoadImagesButton/VBoxContainer/ToggleButtons"]
layout_mode = 2
size_flags_horizontal = 3
disabled = true
text = "e621"

[node name="LocalLoadButton" type="CheckButton" parent="Settings/LoadImagesButton/VBoxContainer/ToggleButtons"]
layout_mode = 2
size_flags_horizontal = 3
disabled = true
text = "Local"

[node name="AmountToLoad" type="HBoxContainer" parent="Settings/LoadImagesButton/VBoxContainer"]
layout_mode = 2
alignment = 1

[node name="e621SpinBox" type="SpinBox" parent="Settings/LoadImagesButton/VBoxContainer/AmountToLoad"]
layout_mode = 2
size_flags_horizontal = 3
max_value = 10.0
editable = false

[node name="LocalSpinBox" type="SpinBox" parent="Settings/LoadImagesButton/VBoxContainer/AmountToLoad"]
layout_mode = 2
size_flags_horizontal = 3
max_value = 10.0
editable = false

[node name="OpenTagsButton" type="Button" parent="Settings"]
layout_mode = 0
offset_left = 32.0
offset_top = 168.0
offset_right = 208.0
offset_bottom = 216.0
text = "Open tags folder"

[node name="RecreateDatabaseBtn" type="Button" parent="Settings"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 216.0
offset_top = 168.0
offset_right = 512.0
offset_bottom = 216.0
tooltip_text = "If you've added tag files instead of creating them, you'll need to recreate the implications in order for them to show up in the application"
text = "Recreate tag impliactions"

[node name="Aliases" type="Control" parent="Settings"]
anchors_preset = 0
offset_left = 64.0
offset_top = 264.0
offset_right = 512.0
offset_bottom = 584.0
script = SubResource("GDScript_jmlhj")

[node name="Aliases" type="Tree" parent="Settings/Aliases"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -32.0
offset_top = -24.0
offset_bottom = -40.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_hr4cx")

[node name="OldAlias" type="LineEdit" parent="Settings/Aliases"]
layout_mode = 0
offset_left = -32.0
offset_top = 288.0
offset_right = 200.0
offset_bottom = 328.0
placeholder_text = "Old name"
alignment = 1

[node name="NewAlias" type="LineEdit" parent="Settings/Aliases"]
layout_mode = 0
offset_left = 216.0
offset_top = 288.0
offset_right = 448.0
offset_bottom = 328.0
placeholder_text = "New name"
alignment = 1

[node name="RemoveAliasButton" type="Button" parent="Settings/Aliases"]
layout_mode = 0
offset_left = -32.0
offset_top = 344.0
offset_right = 200.0
offset_bottom = 384.0
disabled = true
text = "Remove Alias"

[node name="AddAliasButton" type="Button" parent="Settings/Aliases"]
layout_mode = 0
offset_left = 216.0
offset_top = 344.0
offset_right = 448.0
offset_bottom = 384.0
disabled = true
text = "Add alias"

[node name="Label" type="Label" parent="Settings/Aliases"]
layout_mode = 0
offset_left = 920.0
offset_top = -312.0
offset_right = 1080.0
offset_bottom = -280.0
text = "Suggestion Blacklist"
horizontal_alignment = 2
vertical_alignment = 2

[node name="BlackListControl" type="Control" parent="Settings"]
anchors_preset = 0
offset_left = 984.0
offset_top = 32.0
offset_right = 1256.0
offset_bottom = 648.0
script = SubResource("GDScript_mqjmn")

[node name="AddToBlack" type="LineEdit" parent="Settings/BlackListControl"]
unique_name_in_owner = true
layout_mode = 0
offset_left = 1.0
offset_top = -40.0
offset_right = 272.0
offset_bottom = -9.0
placeholder_text = "Add to blacklist"

[node name="BlackList" type="ItemList" parent="Settings/BlackListControl"]
unique_name_in_owner = true
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
max_columns = 2
same_column_width = true

[node name="Constants" type="Control" parent="Settings"]
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0
script = SubResource("GDScript_dvmq4")

[node name="ConstantsLineEdit" type="LineEdit" parent="Settings/Constants"]
layout_mode = 0
offset_left = 576.0
offset_top = 424.0
offset_right = 755.0
offset_bottom = 455.0
tooltip_text = "A constant tag is a tag that will always be included in the final tag list. They are always added last."
placeholder_text = "Add to constants"

[node name="TagList" type="Control" parent="Settings/Constants"]
anchors_preset = 0
offset_left = 768.0
offset_top = 520.0
offset_right = 1216.0
offset_bottom = 648.0

[node name="ConstantsItemList" type="ItemList" parent="Settings/Constants/TagList"]
layout_mode = 1
anchors_preset = -1
anchor_left = -0.429
anchor_top = -0.437
anchor_right = 0.411
anchor_bottom = 0.937
offset_left = 0.192017
offset_top = -0.0639992
offset_right = 7.87199
offset_bottom = 8.064
max_columns = 3

[node name="InvalidTags" type="Control" parent="Settings"]
anchors_preset = 0
offset_left = 576.0
offset_top = 32.0
offset_right = 960.0
offset_bottom = 400.0
script = SubResource("GDScript_i3qtj")

[node name="InvalidTagsLabel" type="Label" parent="Settings/InvalidTags"]
layout_mode = 0
offset_top = -72.0
offset_right = 91.0
offset_bottom = -46.0
text = "Invalid Tags"

[node name="InvalidTagsLineEdit" type="LineEdit" parent="Settings/InvalidTags"]
layout_mode = 0
offset_top = -40.0
offset_right = 256.0
offset_bottom = -9.0
placeholder_text = "Add to invalid tags"

[node name="InvalidItemList" type="ItemList" parent="Settings/InvalidTags"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
max_columns = 2

[node name="SettingsBar" type="MenuBar" parent="Settings"]
layout_mode = 0
offset_left = 72.0
offset_top = -48.0
offset_right = 142.0
offset_bottom = -8.0

[node name="Settings" type="PopupMenu" parent="Settings/SettingsBar"]
item_count = 1
item_0/text = "API key"
item_0/id = 0

[node name="APILoader" type="Control" parent="Settings"]
visible = false
layout_mode = 1
anchor_top = -0.0843373
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_7dq25")
metadata/_edit_use_anchors_ = true

[node name="ColorRect" type="ColorRect" parent="Settings/APILoader"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.145098, 0.168627, 0.203922, 0.588235)

[node name="AllItems" type="Control" parent="Settings/APILoader"]
layout_mode = 1
anchor_left = 0.15
anchor_top = 0.267
anchor_right = 0.85
anchor_bottom = 0.8
offset_top = -40.24

[node name="AppBG" type="ColorRect" parent="Settings/APILoader/AllItems"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.435294, 0.47451, 0.556863, 1)

[node name="Load" type="Control" parent="Settings/APILoader/AllItems"]
anchors_preset = 0
offset_left = 464.0
offset_top = 48.0
offset_right = 888.0
offset_bottom = 416.0
script = SubResource("GDScript_ert6n")

[node name="DarkAppBG" type="ColorRect" parent="Settings/APILoader/AllItems/Load"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.25, 0.28125, 0.339844, 1)

[node name="Label3" type="Label" parent="Settings/APILoader/AllItems/Load"]
layout_mode = 0
offset_left = -8.0
offset_top = 8.0
offset_right = 400.0
offset_bottom = 40.0
text = "Load key"
horizontal_alignment = 1
vertical_alignment = 1

[node name="APIKey" type="LineEdit" parent="Settings/APILoader/AllItems/Load"]
layout_mode = 0
offset_left = 32.0
offset_top = 152.0
offset_right = 352.0
offset_bottom = 183.0
placeholder_text = "Encryption Key"
alignment = 1
secret = true

[node name="RevealPassButton" type="CheckButton" parent="Settings/APILoader/AllItems/Load/APIKey"]
layout_mode = 0
offset_left = 320.0
offset_right = 368.0
offset_bottom = 32.0

[node name="LoadButton" type="Button" parent="Settings/APILoader/AllItems/Load"]
layout_mode = 0
offset_left = 96.0
offset_top = 192.0
offset_right = 288.0
offset_bottom = 223.0
text = "Load Key"

[node name="ButtonTextTimer" type="Timer" parent="Settings/APILoader/AllItems/Load"]
one_shot = true

[node name="LogIn" type="Control" parent="Settings/APILoader/AllItems"]
anchors_preset = 0
offset_left = 8.0
offset_top = 48.0
offset_right = 432.0
offset_bottom = 416.0
script = SubResource("GDScript_gagfo")

[node name="DarkAppBG" type="ColorRect" parent="Settings/APILoader/AllItems/LogIn"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.25, 0.28125, 0.339844, 1)

[node name="Label2" type="Label" parent="Settings/APILoader/AllItems/LogIn"]
layout_mode = 0
offset_left = 8.0
offset_top = 8.0
offset_right = 416.0
offset_bottom = 40.0
text = "Log-in to e621"
horizontal_alignment = 1
vertical_alignment = 1

[node name="UserLineEdit" type="LineEdit" parent="Settings/APILoader/AllItems/LogIn"]
layout_mode = 0
offset_left = 88.0
offset_top = 56.0
offset_right = 344.0
offset_bottom = 87.0
placeholder_text = "Username"
alignment = 1

[node name="KeyLineEdit" type="LineEdit" parent="Settings/APILoader/AllItems/LogIn"]
layout_mode = 0
offset_left = 88.0
offset_top = 96.0
offset_right = 344.0
offset_bottom = 127.0
placeholder_text = "API Key"
alignment = 1
secret = true

[node name="Label" type="Label" parent="Settings/APILoader/AllItems/LogIn"]
layout_mode = 0
offset_left = 16.0
offset_top = 256.0
offset_right = 424.0
offset_bottom = 360.0
text = "\"Remember key\" will save your info to a plain text file and encrypt it with a key you set. It is not reccomended to save your API key using this software."
autowrap_mode = 2

[node name="RememberCheck" type="CheckBox" parent="Settings/APILoader/AllItems/LogIn"]
layout_mode = 0
offset_left = 144.0
offset_top = 192.0
offset_right = 289.0
offset_bottom = 223.0
text = "Remember key"

[node name="EncryptKeyLineEdit" type="LineEdit" parent="Settings/APILoader/AllItems/LogIn/RememberCheck"]
layout_mode = 0
offset_left = -56.0
offset_top = 32.0
offset_right = 200.0
offset_bottom = 63.0
placeholder_text = "Encryption Key"
alignment = 1
secret = true

[node name="RevealEncrypt" type="CheckButton" parent="Settings/APILoader/AllItems/LogIn/RememberCheck/EncryptKeyLineEdit"]
layout_mode = 0
offset_left = 256.0
offset_right = 304.0
offset_bottom = 32.0

[node name="SaveBTN" type="Button" parent="Settings/APILoader/AllItems/LogIn"]
layout_mode = 0
offset_left = 112.0
offset_top = 144.0
offset_right = 320.0
offset_bottom = 184.0
text = "Save"

[node name="CloseButton" type="Button" parent="Settings/APILoader/AllItems"]
layout_mode = 0
offset_left = 840.0
offset_top = 8.0
offset_right = 888.0
offset_bottom = 40.0
text = "X"

[node name="e621Requester" parent="." instance=ExtResource("2_4gepn")]
unique_name_in_owner = true
max_parallel_requests = 0
timeout_time = 10.0
post_limit = 1

[node name="TagListGenerator" type="Node" parent="."]
unique_name_in_owner = true
script = ExtResource("5_3orkp")
